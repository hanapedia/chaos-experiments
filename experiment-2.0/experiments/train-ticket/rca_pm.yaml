# vim: set filetype=yaml.ansible :
---
- name: Run chaos experiment
  hosts: localhost
  vars:
    history: "-h ./historical_data/1.pkl -h ./historical_data/2.pkl"
  tasks:
    - name: get subdirectory names
      ansible.builtin.command: "ls ./datasets/A/{{ item }}"
      register: faults
      changed_when: false
      with_items: ['api_faults', 'microservice_faults', 'container_faults']

    - name: Run rca
      with_nested:
        - ['api_faults_pm']
        - "{{ faults.results[0].stdout_lines }}"
      vars:
        path_root: "./{{ item[0] }}/{{ item[1].split('.')[0] }}"
      ansible.builtin.command:
        creates: "{{ path_root }}/results.pkl"
        cmd: "python ./files/run_tracerca.py -p {{ path_root }} -i {{ path_root }}/invocation.pkl -o {{ path_root }}/results.pkl {{ history }} -l {{ path_root }}/result.log"

    # - name: Run rca for microservice faults
    #   with_nested:
    #     - ['microservice_faults_pm']
    #     - "{{ faults.results[1].stdout_lines }}"
    #   vars:
    #     path_root: "./{{ item[0] }}/{{ item[1].split('.')[0] }}"
    #   ansible.builtin.command:
    #     creates: "{{ path_root }}/results.pkl"
    #     cmd: "python ./files/run_tracerca.py -p {{ path_root }} -i {{ path_root }}/invocation.pkl -o {{ path_root }}/results.pkl {{ history }} -l {{ path_root }}/result.log"

    - name: Run rca for container faults
      with_nested:
        - ['container_faults_pm']
        - "{{ faults.results[2].stdout_lines }}"
      vars:
        path_root: "./{{ item[0] }}/{{ item[1].split('.')[0] }}"
      ansible.builtin.command:
        creates: "{{ path_root }}/results.pkl"
        cmd: "python ./files/run_tracerca.py -p {{ path_root }} -i {{ path_root }}/invocation.pkl -o {{ path_root }}/results.pkl {{ history }} -l {{ path_root }}/result.log"
