# vim: set filetype=yaml.ansible :
---
- name: Deploy benchmark and loadgenerator to K8s
  tags:
    - deploy
  block:
    - name: Init Benchmark deployed
      ansible.builtin.set_fact:
        benchmark_deployed: false

    - name: Init Loadgenerator deployed
      ansible.builtin.set_fact:
        loadgenerator_deployed: false

    - name: Import manifests
      block:
        - name: Ensure that the directory to dump the manifest exist
          ansible.builtin.file:
            path: "{{ base_path }}/{{ variant_name }}/manifests"
            state: directory
            mode: 0755

        - name: Import kubernetes-manifest
          ansible.builtin.copy:
            src: "{{ benchmarks.manifest_path }}/{{ variant_name }}/kubernetes-manifest.yaml"
            dest: "{{ base_path }}/{{ variant_name }}/manifests/kubernetes-manifest.yaml"

        - name: Import loadgenerator-manifest
          ansible.builtin.copy:
            src: "{{ benchmarks.manifest_path }}/{{ variant_name }}/loadgenerator-manifest.yaml"
            dest: "{{ base_path }}/{{ variant_name }}/manifests/loadgenerator-manifest.yaml"

    - name: Deploy benchmark
      changed_when: true
      ansible.builtin.command:
        cmd: kubectl apply -f kubernetes-manifest.yaml
        chdir: "{{ base_path }}/{{ variant_name }}/manifests"

    - name: Benchmark deployed
      ansible.builtin.set_fact:
        benchmark_deployed: true

    - name: Deploy loadgenerator
      changed_when: true
      ansible.builtin.command:
        cmd: kubectl apply -f loadgenerator-manifest.yaml
        chdir: "{{ base_path }}/{{ variant_name }}/manifests"

    - name: Loadgenerator deployed
      ansible.builtin.set_fact:
        loadgenerator_deployed: true

  rescue:
    - name: Note failed task
      ansible.builtin.lineinfile:
        path: "{{ base_path }}/failed"
        line: "FAILED:{{ variant_name }}:{{ ansible_failed_task }}"
        create: yes

  always:
    - name: deployed
      when: loadgenerator_deployed and benchmark_deployed 
      ansible.builtin.set_fact:
        deployed: true

    - name: Get the execution end time
      register: date_now
      ansible.builtin.command: date

    - name: Note the time
      ansible.builtin.lineinfile:
        path: "{{ base_path }}/log"
        line: "{{ variant_name }} delployment: {{ date_now.stdout }}"
        create: yes

